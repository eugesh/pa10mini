Terminals unused in grammar

   COMMA


State 15 conflicts: 2 shift/reduce


Grammar

    0 $accept: document $end

    1 document: system
    2         | system initial_list
    3         | const_list system
    4         | const_list system initial_list

    5 initial_list: initial_list initial termsymbol
    6             | initial termsymbol

    7 initial: VAR DEQ NUM

    8 const_list: const_list const NEWLINE
    9           | const NEWLINE

   10 const: VAR ASSIGN NUM

   11 system: system equal termsymbol
   12       | equal termsymbol

   13 termsymbol: /* empty */
   14           | NEWLINE

   15 equal: expr EQ expr

   16 expr: addexpr

   17 addexpr: mulexpr
   18        | addexpr PLUS mulexpr
   19        | addexpr MINUS mulexpr

   20 mulexpr: unaryexpr
   21        | mulexpr MUL unaryexpr
   22        | mulexpr DIV unaryexpr

   23 unaryexpr: powexpr
   24          | MINUS powexpr
   25          | PLUS powexpr

   26 powexpr: atomexpr
   27        | powexpr POW atomexpr

   28 atomexpr: NUM
   29         | LB expr RB
   30         | func
   31         | VAR
   32         | VAR DSIGN

   33 func: SIN LB expr RB
   34     | COS LB expr RB
   35     | LN LB expr RB


Terminals, with rules where they appear

$end (0) 0
error (256)
VAR (258) 7 10 31 32
NUM (259) 7 10 28
DSIGN (260) 32
COMMA (261)
NEWLINE (262) 8 9 14
ASSIGN (263) 10
DEQ (264) 7
EQ (265) 15
LB (266) 29 33 34 35
RB (267) 29 33 34 35
POW (268) 27
PLUS (269) 18 25
MINUS (270) 19 24
MUL (271) 21
DIV (272) 22
SIN (273) 33
COS (274) 34
LN (275) 35


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
document (22)
    on left: 1 2 3 4, on right: 0
initial_list (23)
    on left: 5 6, on right: 2 4 5
initial (24)
    on left: 7, on right: 5 6
const_list (25)
    on left: 8 9, on right: 3 4 8
const (26)
    on left: 10, on right: 8 9
system (27)
    on left: 11 12, on right: 1 2 3 4 11
termsymbol (28)
    on left: 13 14, on right: 5 6 11 12
equal (29)
    on left: 15, on right: 11 12
expr (30)
    on left: 16, on right: 15 29 33 34 35
addexpr (31)
    on left: 17 18 19, on right: 16 18 19
mulexpr (32)
    on left: 20 21 22, on right: 17 18 19 21 22
unaryexpr (33)
    on left: 23 24 25, on right: 20 21 22
powexpr (34)
    on left: 26 27, on right: 23 24 25 27
atomexpr (35)
    on left: 28 29 30 31 32, on right: 26 27
func (36)
    on left: 33 34 35, on right: 30


State 0

    0 $accept: . document $end

    VAR    shift, and go to state 1
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    document    go to state 9
    const_list  go to state 10
    const       go to state 11
    system      go to state 12
    equal       go to state 13
    expr        go to state 14
    addexpr     go to state 15
    mulexpr     go to state 16
    unaryexpr   go to state 17
    powexpr     go to state 18
    atomexpr    go to state 19
    func        go to state 20


State 1

   10 const: VAR . ASSIGN NUM
   31 atomexpr: VAR .
   32         | VAR . DSIGN

    DSIGN   shift, and go to state 21
    ASSIGN  shift, and go to state 22

    $default  reduce using rule 31 (atomexpr)


State 2

   28 atomexpr: NUM .

    $default  reduce using rule 28 (atomexpr)


State 3

   29 atomexpr: LB . expr RB

    VAR    shift, and go to state 23
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    expr       go to state 24
    addexpr    go to state 15
    mulexpr    go to state 16
    unaryexpr  go to state 17
    powexpr    go to state 18
    atomexpr   go to state 19
    func       go to state 20


State 4

   25 unaryexpr: PLUS . powexpr

    VAR  shift, and go to state 23
    NUM  shift, and go to state 2
    LB   shift, and go to state 3
    SIN  shift, and go to state 6
    COS  shift, and go to state 7
    LN   shift, and go to state 8

    powexpr   go to state 25
    atomexpr  go to state 19
    func      go to state 20


State 5

   24 unaryexpr: MINUS . powexpr

    VAR  shift, and go to state 23
    NUM  shift, and go to state 2
    LB   shift, and go to state 3
    SIN  shift, and go to state 6
    COS  shift, and go to state 7
    LN   shift, and go to state 8

    powexpr   go to state 26
    atomexpr  go to state 19
    func      go to state 20


State 6

   33 func: SIN . LB expr RB

    LB  shift, and go to state 27


State 7

   34 func: COS . LB expr RB

    LB  shift, and go to state 28


State 8

   35 func: LN . LB expr RB

    LB  shift, and go to state 29


State 9

    0 $accept: document . $end

    $end  shift, and go to state 30


State 10

    3 document: const_list . system
    4         | const_list . system initial_list
    8 const_list: const_list . const NEWLINE

    VAR    shift, and go to state 1
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    const      go to state 31
    system     go to state 32
    equal      go to state 13
    expr       go to state 14
    addexpr    go to state 15
    mulexpr    go to state 16
    unaryexpr  go to state 17
    powexpr    go to state 18
    atomexpr   go to state 19
    func       go to state 20


State 11

    9 const_list: const . NEWLINE

    NEWLINE  shift, and go to state 33


State 12

    1 document: system .
    2         | system . initial_list
   11 system: system . equal termsymbol

    VAR    shift, and go to state 34
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    $default  reduce using rule 1 (document)

    initial_list  go to state 35
    initial       go to state 36
    equal         go to state 37
    expr          go to state 14
    addexpr       go to state 15
    mulexpr       go to state 16
    unaryexpr     go to state 17
    powexpr       go to state 18
    atomexpr      go to state 19
    func          go to state 20


State 13

   12 system: equal . termsymbol

    NEWLINE  shift, and go to state 38

    $default  reduce using rule 13 (termsymbol)

    termsymbol  go to state 39


State 14

   15 equal: expr . EQ expr

    EQ  shift, and go to state 40


State 15

   16 expr: addexpr .
   18 addexpr: addexpr . PLUS mulexpr
   19        | addexpr . MINUS mulexpr

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42

    PLUS      [reduce using rule 16 (expr)]
    MINUS     [reduce using rule 16 (expr)]
    $default  reduce using rule 16 (expr)


State 16

   17 addexpr: mulexpr .
   21 mulexpr: mulexpr . MUL unaryexpr
   22        | mulexpr . DIV unaryexpr

    MUL  shift, and go to state 43
    DIV  shift, and go to state 44

    $default  reduce using rule 17 (addexpr)


State 17

   20 mulexpr: unaryexpr .

    $default  reduce using rule 20 (mulexpr)


State 18

   23 unaryexpr: powexpr .
   27 powexpr: powexpr . POW atomexpr

    POW  shift, and go to state 45

    $default  reduce using rule 23 (unaryexpr)


State 19

   26 powexpr: atomexpr .

    $default  reduce using rule 26 (powexpr)


State 20

   30 atomexpr: func .

    $default  reduce using rule 30 (atomexpr)


State 21

   32 atomexpr: VAR DSIGN .

    $default  reduce using rule 32 (atomexpr)


State 22

   10 const: VAR ASSIGN . NUM

    NUM  shift, and go to state 46


State 23

   31 atomexpr: VAR .
   32         | VAR . DSIGN

    DSIGN  shift, and go to state 21

    $default  reduce using rule 31 (atomexpr)


State 24

   29 atomexpr: LB expr . RB

    RB  shift, and go to state 47


State 25

   25 unaryexpr: PLUS powexpr .
   27 powexpr: powexpr . POW atomexpr

    POW  shift, and go to state 45

    $default  reduce using rule 25 (unaryexpr)


State 26

   24 unaryexpr: MINUS powexpr .
   27 powexpr: powexpr . POW atomexpr

    POW  shift, and go to state 45

    $default  reduce using rule 24 (unaryexpr)


State 27

   33 func: SIN LB . expr RB

    VAR    shift, and go to state 23
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    expr       go to state 48
    addexpr    go to state 15
    mulexpr    go to state 16
    unaryexpr  go to state 17
    powexpr    go to state 18
    atomexpr   go to state 19
    func       go to state 20


State 28

   34 func: COS LB . expr RB

    VAR    shift, and go to state 23
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    expr       go to state 49
    addexpr    go to state 15
    mulexpr    go to state 16
    unaryexpr  go to state 17
    powexpr    go to state 18
    atomexpr   go to state 19
    func       go to state 20


State 29

   35 func: LN LB . expr RB

    VAR    shift, and go to state 23
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    expr       go to state 50
    addexpr    go to state 15
    mulexpr    go to state 16
    unaryexpr  go to state 17
    powexpr    go to state 18
    atomexpr   go to state 19
    func       go to state 20


State 30

    0 $accept: document $end .

    $default  accept


State 31

    8 const_list: const_list const . NEWLINE

    NEWLINE  shift, and go to state 51


State 32

    3 document: const_list system .
    4         | const_list system . initial_list
   11 system: system . equal termsymbol

    VAR    shift, and go to state 34
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    $default  reduce using rule 3 (document)

    initial_list  go to state 52
    initial       go to state 36
    equal         go to state 37
    expr          go to state 14
    addexpr       go to state 15
    mulexpr       go to state 16
    unaryexpr     go to state 17
    powexpr       go to state 18
    atomexpr      go to state 19
    func          go to state 20


State 33

    9 const_list: const NEWLINE .

    $default  reduce using rule 9 (const_list)


State 34

    7 initial: VAR . DEQ NUM
   31 atomexpr: VAR .
   32         | VAR . DSIGN

    DSIGN  shift, and go to state 21
    DEQ    shift, and go to state 53

    $default  reduce using rule 31 (atomexpr)


State 35

    2 document: system initial_list .
    5 initial_list: initial_list . initial termsymbol

    VAR  shift, and go to state 54

    $default  reduce using rule 2 (document)

    initial  go to state 55


State 36

    6 initial_list: initial . termsymbol

    NEWLINE  shift, and go to state 38

    $default  reduce using rule 13 (termsymbol)

    termsymbol  go to state 56


State 37

   11 system: system equal . termsymbol

    NEWLINE  shift, and go to state 38

    $default  reduce using rule 13 (termsymbol)

    termsymbol  go to state 57


State 38

   14 termsymbol: NEWLINE .

    $default  reduce using rule 14 (termsymbol)


State 39

   12 system: equal termsymbol .

    $default  reduce using rule 12 (system)


State 40

   15 equal: expr EQ . expr

    VAR    shift, and go to state 23
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    expr       go to state 58
    addexpr    go to state 15
    mulexpr    go to state 16
    unaryexpr  go to state 17
    powexpr    go to state 18
    atomexpr   go to state 19
    func       go to state 20


State 41

   18 addexpr: addexpr PLUS . mulexpr

    VAR    shift, and go to state 23
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    mulexpr    go to state 59
    unaryexpr  go to state 17
    powexpr    go to state 18
    atomexpr   go to state 19
    func       go to state 20


State 42

   19 addexpr: addexpr MINUS . mulexpr

    VAR    shift, and go to state 23
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    mulexpr    go to state 60
    unaryexpr  go to state 17
    powexpr    go to state 18
    atomexpr   go to state 19
    func       go to state 20


State 43

   21 mulexpr: mulexpr MUL . unaryexpr

    VAR    shift, and go to state 23
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    unaryexpr  go to state 61
    powexpr    go to state 18
    atomexpr   go to state 19
    func       go to state 20


State 44

   22 mulexpr: mulexpr DIV . unaryexpr

    VAR    shift, and go to state 23
    NUM    shift, and go to state 2
    LB     shift, and go to state 3
    PLUS   shift, and go to state 4
    MINUS  shift, and go to state 5
    SIN    shift, and go to state 6
    COS    shift, and go to state 7
    LN     shift, and go to state 8

    unaryexpr  go to state 62
    powexpr    go to state 18
    atomexpr   go to state 19
    func       go to state 20


State 45

   27 powexpr: powexpr POW . atomexpr

    VAR  shift, and go to state 23
    NUM  shift, and go to state 2
    LB   shift, and go to state 3
    SIN  shift, and go to state 6
    COS  shift, and go to state 7
    LN   shift, and go to state 8

    atomexpr  go to state 63
    func      go to state 20


State 46

   10 const: VAR ASSIGN NUM .

    $default  reduce using rule 10 (const)


State 47

   29 atomexpr: LB expr RB .

    $default  reduce using rule 29 (atomexpr)


State 48

   33 func: SIN LB expr . RB

    RB  shift, and go to state 64


State 49

   34 func: COS LB expr . RB

    RB  shift, and go to state 65


State 50

   35 func: LN LB expr . RB

    RB  shift, and go to state 66


State 51

    8 const_list: const_list const NEWLINE .

    $default  reduce using rule 8 (const_list)


State 52

    4 document: const_list system initial_list .
    5 initial_list: initial_list . initial termsymbol

    VAR  shift, and go to state 54

    $default  reduce using rule 4 (document)

    initial  go to state 55


State 53

    7 initial: VAR DEQ . NUM

    NUM  shift, and go to state 67


State 54

    7 initial: VAR . DEQ NUM

    DEQ  shift, and go to state 53


State 55

    5 initial_list: initial_list initial . termsymbol

    NEWLINE  shift, and go to state 38

    $default  reduce using rule 13 (termsymbol)

    termsymbol  go to state 68


State 56

    6 initial_list: initial termsymbol .

    $default  reduce using rule 6 (initial_list)


State 57

   11 system: system equal termsymbol .

    $default  reduce using rule 11 (system)


State 58

   15 equal: expr EQ expr .

    $default  reduce using rule 15 (equal)


State 59

   18 addexpr: addexpr PLUS mulexpr .
   21 mulexpr: mulexpr . MUL unaryexpr
   22        | mulexpr . DIV unaryexpr

    MUL  shift, and go to state 43
    DIV  shift, and go to state 44

    $default  reduce using rule 18 (addexpr)


State 60

   19 addexpr: addexpr MINUS mulexpr .
   21 mulexpr: mulexpr . MUL unaryexpr
   22        | mulexpr . DIV unaryexpr

    MUL  shift, and go to state 43
    DIV  shift, and go to state 44

    $default  reduce using rule 19 (addexpr)


State 61

   21 mulexpr: mulexpr MUL unaryexpr .

    $default  reduce using rule 21 (mulexpr)


State 62

   22 mulexpr: mulexpr DIV unaryexpr .

    $default  reduce using rule 22 (mulexpr)


State 63

   27 powexpr: powexpr POW atomexpr .

    $default  reduce using rule 27 (powexpr)


State 64

   33 func: SIN LB expr RB .

    $default  reduce using rule 33 (func)


State 65

   34 func: COS LB expr RB .

    $default  reduce using rule 34 (func)


State 66

   35 func: LN LB expr RB .

    $default  reduce using rule 35 (func)


State 67

    7 initial: VAR DEQ NUM .

    $default  reduce using rule 7 (initial)


State 68

    5 initial_list: initial_list initial termsymbol .

    $default  reduce using rule 5 (initial_list)
